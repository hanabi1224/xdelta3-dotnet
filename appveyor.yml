image:
  - Visual Studio 2019
  - Ubuntu
environment:
  matrix:
    - RUST_TOOL_CHAIN: stable
branches:
  only:
    - master
pull_requests:
  do_not_increment_build_number: true
nuget:
  disable_publish_on_pr: true
deploy:
  provider: NuGet
  api_key:
    secure: rE/5DvmyqGe9RdSRHDF7HF0MZoQzhb84P9cipIK8uY4TPf1Fix+67biwICQ4qHDB
  on:
    branch: master
    #appveyor_repo_tag: true
matrix:
  fast_finish: true
for:
  - matrix:
      only:
        - image: Ubuntu
    install:
      - git submodule update --init --recursive
      - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain ${RUST_TOOL_CHAIN}
      - source $HOME/.cargo/env
    build_script:
      - dotnet build -c Release dotnet
      - cargo build --release --manifest-path xdelta3-rs/Cargo.toml
      - dotnet build -c Release dotnet/redist/linux-x64
    test_script:
      - dotnet test -c Release dotnet
    artifacts:
      - path: 'dotnet/redist/**/*.nupkg'
        name: nupkg
      - path: 'dotnet/redist/**/*.snupkg'
        name: snupkg
  - matrix:
      only:
        - image: Visual Studio 2019
    install:
      - git submodule update --init --recursive
      - ps: iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
      - scoop install rustup
      - refreshenv
      #- SET PATH=%USERPROFILE%\scoop\apps\rustup\current\.cargo\bin;%PATH%
      - rustup default %RUST_TOOL_CHAIN%
      #- SET PATH=%USERPROFILE%\.cargo\bin;C:\MinGW\bin;%PATH%
      - rustc -V
      - cargo -V
    build_script:
      - dotnet test -c Release dotnet
      - cargo build --release --manifest-path xdelta3-rs/Cargo.toml
      - dotnet build -c Release dotnet/redist/win-x64
    artifacts:
      - path: '**\*.nupkg'
        name: nupkg
      - path: '**\*.snupkg'
        name: snupkg